/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package StudentPackage;

import TeacherPackage.Choices;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author halla
 */
public class StudentAnswer extends javax.swing.JFrame {

    private int TAID, QTID;
    String wew = "";

    /**
     * Creates new form Home
     */
    ResultSet questionRs, choiceRs;
    ArrayList<String> questionsList, conditionList;
    ArrayList<Integer> questionsIDList;
    ArrayList<String> answers = new ArrayList<>();
    String[][] choices;
    int count = 0;
    int QEID;
    int SAID;

    public StudentAnswer() {
        this.setUndecorated(true);
        this.setAlwaysOnTop(true);
        this.setResizable(false);
        this.setVisible(true);
        initComponents();
        enterAnswerLbl.setVisible(false);
        Toolkit tk = Toolkit.getDefaultToolkit();
        int xsize = (int) tk.getScreenSize().getWidth();
        int ysize = (int) tk.getScreenSize().getHeight();
        this.setSize(xsize, ysize);
    }

    public StudentAnswer(int TAID, int QTID, String title, String condition, ResultSet pass, int SAID) {
        this.setUndecorated(true);
        this.setAlwaysOnTop(true);
        this.setResizable(true);
        this.setVisible(true);
        initComponents();
        enterAnswerLbl.setVisible(false);
        JLabelA.setVisible(false);
        JLabelB.setVisible(false);
        JLabelC.setVisible(false);
        JLabelD.setVisible(false);
        txtA.setVisible(false);
        txtB.setVisible(false);
        txtC.setVisible(false);
        txtD.setVisible(false);
        txt_Identification.setVisible(false);
        txt_Multiple.setVisible(false);
        test.setVisible(false);
        Toolkit tk = Toolkit.getDefaultToolkit();
        int xsize = (int) tk.getScreenSize().getWidth();
        int ysize = (int) tk.getScreenSize().getHeight();
        this.setSize(xsize, ysize);
        this.TAID = TAID;
        this.QTID = QTID;
        this.SAID = SAID;

        TITLETOP.setText(title);
        if (condition.equals("TEXT")) {
            txt_Identification.setVisible(true);
            JLabelA.setVisible(false);
            JLabelB.setVisible(false);
            JLabelC.setVisible(false);
            JLabelD.setVisible(false);
            txtA.setVisible(false);
            txtB.setVisible(false);
            txtC.setVisible(false);
            txtD.setVisible(false);

        } else if (condition.equals("MULTIPLE")) {
            JLabelA.setVisible(true);
            JLabelB.setVisible(true);
            JLabelC.setVisible(true);
            JLabelD.setVisible(true);
            txtA.setVisible(true);
            txtB.setVisible(true);
            txtC.setVisible(true);
            txtD.setVisible(true);
            txt_Identification.setVisible(false);
            txt_Multiple.setVisible(true);
        }
        TEXTAREAQTN.setEditable(false);

        getQuestions();
        getChoice();
        populateQuestions();
        jLblNumCursor.setVisible(true);
        jLblNumCursor.setText((count + 1) + " out of " + questionsList.size());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        TITLETOP = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TEXTAREAQTN = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        JLabelA = new javax.swing.JLabel();
        JLabelB = new javax.swing.JLabel();
        JLabelC = new javax.swing.JLabel();
        JLabelD = new javax.swing.JLabel();
        jLblNumCursor = new javax.swing.JLabel();
        txtA = new javax.swing.JLabel();
        txtB = new javax.swing.JLabel();
        txtC = new javax.swing.JLabel();
        txtD = new javax.swing.JLabel();
        NEXTBTN = new javax.swing.JButton();
        BACKBTN = new javax.swing.JButton();
        txt_Identification = new javax.swing.JTextField();
        jLblIden = new javax.swing.JLabel();
        submitBtn = new javax.swing.JButton();
        enterAnswerLbl = new javax.swing.JLabel();
        jLblMultiple = new javax.swing.JLabel();
        saveAnswerBtn = new javax.swing.JButton();
        test = new javax.swing.JLabel();
        txt_Multiple = new javax.swing.JTextField();
        BACKGROUND = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1965, 1080));

        jPanel1.setPreferredSize(new java.awt.Dimension(1965, 1080));
        jPanel1.setLayout(null);

        TITLETOP.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        TITLETOP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(TITLETOP);
        TITLETOP.setBounds(340, 50, 690, 50);

        TEXTAREAQTN.setColumns(20);
        TEXTAREAQTN.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        TEXTAREAQTN.setRows(5);
        jScrollPane1.setViewportView(TEXTAREAQTN);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(60, 220, 970, 140);

        jLabel2.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        jLabel2.setText("Question:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(60, 170, 130, 50);

        JLabelA.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        JLabelA.setText("A.");
        jPanel1.add(JLabelA);
        JLabelA.setBounds(370, 460, 30, 17);

        JLabelB.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        JLabelB.setText("B.");
        jPanel1.add(JLabelB);
        JLabelB.setBounds(370, 520, 30, 17);

        JLabelC.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        JLabelC.setText("C.");
        jPanel1.add(JLabelC);
        JLabelC.setBounds(370, 580, 30, 17);

        JLabelD.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        JLabelD.setText("D.");
        jPanel1.add(JLabelD);
        JLabelD.setBounds(370, 640, 30, 17);

        jLblNumCursor.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLblNumCursor.setForeground(new java.awt.Color(255, 255, 255));
        jLblNumCursor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblNumCursor.setText("1");
        jPanel1.add(jLblNumCursor);
        jLblNumCursor.setBounds(520, 120, 350, 30);

        txtA.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jPanel1.add(txtA);
        txtA.setBounds(390, 450, 250, 40);

        txtB.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jPanel1.add(txtB);
        txtB.setBounds(390, 510, 250, 40);

        txtC.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jPanel1.add(txtC);
        txtC.setBounds(390, 570, 250, 40);

        txtD.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jPanel1.add(txtD);
        txtD.setBounds(390, 630, 250, 40);

        NEXTBTN.setBackground(new java.awt.Color(0, 102, 51));
        NEXTBTN.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        NEXTBTN.setForeground(new java.awt.Color(255, 255, 255));
        NEXTBTN.setText("NEXT");
        NEXTBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NEXTBTNActionPerformed(evt);
            }
        });
        jPanel1.add(NEXTBTN);
        NEXTBTN.setBounds(1240, 220, 80, 30);

        BACKBTN.setBackground(new java.awt.Color(0, 102, 51));
        BACKBTN.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        BACKBTN.setForeground(new java.awt.Color(255, 255, 255));
        BACKBTN.setText("BACK");
        BACKBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BACKBTNActionPerformed(evt);
            }
        });
        jPanel1.add(BACKBTN);
        BACKBTN.setBounds(1140, 220, 80, 30);

        txt_Identification.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jPanel1.add(txt_Identification);
        txt_Identification.setBounds(430, 410, 290, 80);

        jLblIden.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        jLblIden.setText("Answer: ");
        jPanel1.add(jLblIden);
        jLblIden.setBounds(320, 410, 110, 50);

        submitBtn.setBackground(new java.awt.Color(0, 102, 51));
        submitBtn.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        submitBtn.setForeground(new java.awt.Color(255, 255, 255));
        submitBtn.setText("SUBMIT ANSWERS");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });
        jPanel1.add(submitBtn);
        submitBtn.setBounds(1150, 710, 180, 30);

        enterAnswerLbl.setText("Enter Answer First!");
        jPanel1.add(enterAnswerLbl);
        enterAnswerLbl.setBounds(730, 430, 110, 30);

        jLblMultiple.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLblMultiple.setText("ANSWER:");
        jPanel1.add(jLblMultiple);
        jLblMultiple.setBounds(440, 700, 80, 30);

        saveAnswerBtn.setBackground(new java.awt.Color(0, 102, 51));
        saveAnswerBtn.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        saveAnswerBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveAnswerBtn.setText("SAVE");
        saveAnswerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAnswerBtnActionPerformed(evt);
            }
        });
        jPanel1.add(saveAnswerBtn);
        saveAnswerBtn.setBounds(1190, 280, 80, 30);

        test.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        test.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(test);
        test.setBounds(940, 520, 260, 30);

        txt_Multiple.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jPanel1.add(txt_Multiple);
        txt_Multiple.setBounds(520, 700, 100, 30);

        BACKGROUND.setIcon(new javax.swing.ImageIcon("D:\\NU School Files\\5th Term\\UpdateIM-master\\src\\IM PICS\\Answering BG.png")); // NOI18N
        BACKGROUND.setText("jLabel1");
        jPanel1.add(BACKGROUND);
        BACKGROUND.setBounds(0, 0, 1965, 768);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1965, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1080, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void getQuestions() {
        try {
            String searchQuiz = "Select qe_questions, qe_condition, qe_id from questions where TA_ID = ? and QT_ID = ?";
            Connection con = connectionPackage.DBconnection.connect();
            PreparedStatement ps = con.prepareStatement(searchQuiz);
            ps.setInt(1, TAID);
            ps.setInt(2, QTID);
            questionRs = ps.executeQuery();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StudentAnswer.class.getName()).log(Level.SEVERE, null, ex);

        } catch (SQLException ex) {
            Logger.getLogger(StudentAnswer.class.getName()).log(Level.SEVERE, null, ex);
            ex.getMessage();
        }
    }

    public void getChoice() {
        try {
            String searchQuiz = "Select qe_questions, qe_condition, qe_id, from questions where TA_ID = ? and QT_ID = ?";
            String searchChoices = "select questions.QE_ID,answerssingle.an_a, answerssingle.an_b, answerssingle.an_c, answerssingle.an_d\n"
                    + "from answerssingle \n"
                    + "inner join questions\n"
                    + "on answerssingle.QE_ID = questions.QE_ID where questions.QE_Condition = 'MULTIPLE'";
            Connection con = connectionPackage.DBconnection.connect();
            PreparedStatement ps = con.prepareStatement(searchChoices);
            choiceRs = ps.executeQuery();
            int choiceCount = 0;
            while (choiceRs.next()) {
                choiceCount++;
            }

            choiceRs = ps.executeQuery();
            choices = new String[choiceCount][5];

            for (int i = 0; i < choices.length; i++) {
                choices[i][0] = choiceRs.getInt(1) + "";
                choices[i][1] = choiceRs.getString(2);
                choices[i][2] = choiceRs.getString(3);
                choices[i][3] = choiceRs.getString(4);
                choices[i][4] = choiceRs.getString(5);
            }
            
            for(int i =0; i < choices.length;i++){
                for(int j = 0; j<choices.length;j++){
                    System.out.print(choices[i][j] + " ");
                }
                System.out.println(" ");
            }
            
            
          

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StudentAnswer.class.getName()).log(Level.SEVERE, null, ex);

        } catch (SQLException ex) {
            Logger.getLogger(StudentAnswer.class.getName()).log(Level.SEVERE, null, ex);
            ex.getMessage();
        }
    }

    public void populateQuestions() {
        try {
            questionsList = new ArrayList<>();
            conditionList = new ArrayList<>();
            questionsIDList = new ArrayList<>();
            while (questionRs.next()) {
                questionsList.add(questionRs.getString(1));
                conditionList.add(questionRs.getString(2));
                questionsIDList.add(questionRs.getInt(3));
            }

            TEXTAREAQTN.setText(questionsList.get(0));

            if (conditionList.get(0).equals("TEXT")) {
                txt_Identification.setVisible(true);
                JLabelA.setVisible(false);
                JLabelB.setVisible(false);
                JLabelC.setVisible(false);
                JLabelD.setVisible(false);
                txtA.setVisible(false);
                txtB.setVisible(false);
                txtC.setVisible(false);
                txtD.setVisible(false);

            } else if (conditionList.get(0).equals("MULTIPLE")) {
                JLabelA.setVisible(true);
                JLabelB.setVisible(true);
                JLabelC.setVisible(true);
                JLabelD.setVisible(true);
                txtA.setVisible(true);
                txtB.setVisible(true);
                txtC.setVisible(true);
                txtD.setVisible(true);
                txt_Identification.setVisible(false);
                txt_Multiple.setVisible(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(StudentAnswer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void addToAnswer(String answer) {
//        System.out.println(count + " = " + answer);
        System.out.println(answer);
        answers.add(answer);
    }

    private void NEXTBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NEXTBTNActionPerformed
        count++;
        if (count < questionsList.size()) {
            jLblNumCursor.setText((count + 1) + " out of " + questionsList.size());
            if (conditionList.get(count).equals("TEXT")) {
                txt_Identification.setVisible(true);
                JLabelA.setVisible(false);
                JLabelB.setVisible(false);
                JLabelC.setVisible(false);
                JLabelD.setVisible(false);
                txtA.setVisible(false);
                txtB.setVisible(false);
                txtC.setVisible(false);
                txtD.setVisible(false);
                jLblIden.setVisible(true);
                jLblMultiple.setVisible(false);
                txt_Multiple.setVisible(false);
                wew = txt_Identification.getText();
//                System.out.println(txt_Identification.getText());
//                addToAnswer(txt_Identification.getText());

            } else if (conditionList.get(count).equals("MULTIPLE")) {
                JLabelA.setVisible(true);
                JLabelB.setVisible(true);
                JLabelC.setVisible(true);
                JLabelD.setVisible(true);
                jLblIden.setVisible(false);
                jLblMultiple.setVisible(true);
                txtA.setVisible(true);
                txtB.setVisible(true);
                txtC.setVisible(true);
                txtD.setVisible(true);
                txt_Identification.setVisible(false);
                txt_Multiple.setVisible(true);
                wew = txt_Multiple.getText();
                
                
            }
            TEXTAREAQTN.setText(questionsList.get(count));
            test.setVisible(true);
            test.setText(wew);
            addToAnswer(wew);
        }
        txt_Identification.setText("");
        txt_Multiple.setText("");
    }//GEN-LAST:event_NEXTBTNActionPerformed

    private void BACKBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BACKBTNActionPerformed
        count--;
        if (count >= 0) {
            jLblNumCursor.setText((count + 1) + " out of " + questionsList.size());
            TEXTAREAQTN.setText(questionsList.get(count));
            if (conditionList.get(count).equals("TEXT")) {
                txt_Identification.setVisible(true);
                JLabelA.setVisible(false);
                JLabelB.setVisible(false);
                JLabelC.setVisible(false);
                JLabelD.setVisible(false);
                txtA.setVisible(false);
                txtB.setVisible(false);
                txtC.setVisible(false);
                txtD.setVisible(false);

                if (txt_Identification.getText().equals("")) {
                    enterAnswerLbl.setVisible(true);
                    return;
                }
            } else if (conditionList.get(count).equals("MULTIPLE")) {
                JLabelA.setVisible(true);
                JLabelB.setVisible(true);
                JLabelC.setVisible(true);
                JLabelD.setVisible(true);
                txtA.setVisible(true);
                txtB.setVisible(true);
                txtC.setVisible(true);
                txtD.setVisible(true);
                txt_Identification.setVisible(false);
            }
        }
        txt_Identification.setText("");
        txt_Multiple.setText("");
    }//GEN-LAST:event_BACKBTNActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        try {
            Connection con = connectionPackage.DBconnection.connect();
            PreparedStatement pst;
            pst = con.prepareStatement("INSERT INTO answer_student(SA_ID,QE_ID, Answer,Correct) VALUES(?,?,?,0)");

            System.out.println("\nIM HERE IN SUBMIT");
            for (int i = 0; i < questionsIDList.size(); i++) {
                pst.setInt(1, SAID);
                pst.setInt(2, questionsIDList.get(i));
                pst.setString(3, answers.get(i));
                pst.executeUpdate();
                System.out.println(SAID + " " + questionsIDList.get(i) + " " + answers.get(i));
                System.out.println();
            }
            pst.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StudentAnswer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

    }//GEN-LAST:event_submitBtnActionPerformed

    private void saveAnswerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAnswerBtnActionPerformed
//        System.out.println(count + " = " + txt_Multiple.getText());
        //        addToAnswer(txt_Multiple.getText());
//        if (conditionList.get(count).equals("TEXT")) {
//            wew = txt_Identification.getText();
//        } else if (conditionList.get(count).equals("MULTIPLE")) {
//            wew = txt_Multiple.getText();
//        }
//        test.setVisible(true);
//        test.setText(wew);
//        addToAnswer(wew);
    }//GEN-LAST:event_saveAnswerBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentAnswer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentAnswer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentAnswer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentAnswer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentAnswer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BACKBTN;
    private javax.swing.JLabel BACKGROUND;
    private javax.swing.JLabel JLabelA;
    private javax.swing.JLabel JLabelB;
    private javax.swing.JLabel JLabelC;
    private javax.swing.JLabel JLabelD;
    private javax.swing.JButton NEXTBTN;
    private javax.swing.JTextArea TEXTAREAQTN;
    private javax.swing.JLabel TITLETOP;
    private javax.swing.JLabel enterAnswerLbl;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLblIden;
    private javax.swing.JLabel jLblMultiple;
    private javax.swing.JLabel jLblNumCursor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveAnswerBtn;
    private javax.swing.JButton submitBtn;
    private javax.swing.JLabel test;
    private javax.swing.JLabel txtA;
    private javax.swing.JLabel txtB;
    private javax.swing.JLabel txtC;
    private javax.swing.JLabel txtD;
    private javax.swing.JTextField txt_Identification;
    private javax.swing.JTextField txt_Multiple;
    // End of variables declaration//GEN-END:variables
}
